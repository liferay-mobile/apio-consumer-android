buildscript {
	ext.kotlin_version = '1.2.51'

	repositories {
		jcenter()
		google()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:3.2.0-beta01'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

		classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
	}
}

plugins {
	id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC6-4'
}

detekt {
	profile('main') {
		input = "$projectDir"
		config = './detekt.yml'
		filters = '.*test.*,.*/resources/.*,.*/tmp/.*'
		output = './library/reports/report.xml'
	}
	idea {
		path = '/Applications/IntelliJ IDEA.app/Contents'
		codeStyleScheme = "$projectDir/ApioCodeConvention.xml"
		inspectionsProfile = "$projectDir/ApioCodeFormatting.xml"
		report = './library/reports'
		mask = '*.kt,'
	}
}

allprojects {
	repositories {
		jcenter()
		google()
	}
}

task clean(type: Delete) {
	delete rootProject.buildDir
}

ext {
	minSdkVersion = 15
	compileSdkVersion = 27
	targetSdkVersion = compileSdkVersion
	buildToolsVersion = '27.0.3'

	versionCode = 1
	versionName = '0.0.5'

	publishedGroupId = 'com.liferay.mobile'
	libraryName = 'apio-consumer-android'
	libraryDescription = 'Apio Consumer for Android includes the library and a sample project'

	bintrayRepo = 'liferay-mobile'
	bintrayOrg = 'liferay'

	siteUrl = 'https://github.com/liferay-mobile/apio-consumer-android'
	gitUrl = 'https://github.com/liferay-mobile/apio-consumer-android'

	developerId = 'nhpatt'
	developerName = 'Javier Gamarra'
	developerEmail = 'nhpatt@gmail.com'

	licenseName = 'GNU Lesser General Public License, version 2.1'
	licenseUrl = 'http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
	allLicenses = ['LGPL-2.1']
}

def supportLibsVersion = '27.1.1'

ext.libraries = [appCompat          : 'com.android.support:appcompat-v7:' + supportLibsVersion,
                 recyclerView       : 'com.android.support:recyclerview-v7:' + supportLibsVersion,
                 cardView           : 'com.android.support:cardview-v7:' + supportLibsVersion,
                 support_annotations: 'com.android.support:support-annotations:' + supportLibsVersion,
                 exifinterface      : 'com.android.support:exifinterface:' + supportLibsVersion,
                 gson               : 'com.google.code.gson:gson:2.8.2',
                 okhttp             : 'com.squareup.okhttp3:okhttp:3.10.0',
                 result             : 'com.github.kittinunf.result:result:1.3.0',
                 anko_commons       : 'org.jetbrains.anko:anko-commons:0.10.4',
                 picasso            : 'com.squareup.picasso:picasso:2.71828',
                 circle_image_view  : 'de.hdodenhof:circleimageview:2.2.0',
                 kotlin             : 'org.jetbrains.kotlin:kotlin-stdlib-jre7:' + ext.kotlin_version,
                 coroutines_core    : 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.24.0',
                 coroutines_android : 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.24.0',
                 junit              : 'junit:junit:4.12',
                 mockito            : 'org.mockito:mockito-core:2.13.0',
                 espresso           : 'com.android.support.test.espresso:espresso-core:3.0.1',
                 espresso_contrib   : 'com.android.support.test.espresso:espresso-contrib:3.0.1',
                 espresso_idling    : 'com.android.support.test.espresso.idling:idling-concurrent:3.0.1',
                 okhttp_idling      : 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0',
                 mockwebserver      : 'com.squareup.okhttp3:mockwebserver:3.9.1']
